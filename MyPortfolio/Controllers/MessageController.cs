// Controllers/MessageController.cs

using BusinessLayer.Concrete;
using EntityLayer.Concrete;
using Microsoft.AspNetCore.Mvc;
using System;
using Hangfire;
using Microsoft.AspNetCore.Authorization;


namespace MyPortfolio.Controllers

{
    public class MessageController : Controller
    {
        private readonly MessagesManager _messagesManager;

        public MessageController(MessagesManager messagesManager)
        {
            _messagesManager = messagesManager;
        }

        [HttpPost]
        public IActionResult Index(Messages p) // Form action'Ä± ile eÅŸleÅŸecek
        {
            // Model validasyonunu kontrol edebilirsiniz (Ã¶rneÄŸin [Required] alanlar)
            if (ModelState.IsValid)
            {
                p.datetime = DateTime.UtcNow; // ToShortDateString() kullanmak yerine DateTime.Now daha iyi
                p.status = true;
                _messagesManager.TAdd(p);
                BackgroundJob.Enqueue<EmailSenderService>(
                    service => service.SendContactMessage(p) 
                );

                // BaÅŸarÄ±lÄ± mesajÄ± TempData'ye ekle
                TempData["MessageResult"] = "MesajÄ±nÄ±z baÅŸarÄ±yla gÃ¶nderildi! ğŸš€ Size en kÄ±sa sÃ¼rede dÃ¶nÃ¼ÅŸ yapacaÄŸÄ±z.";

                // Post iÅŸleminden sonra GET isteÄŸine yÃ¶nlendir (PRG Deseni: Post/Redirect/Get)
                // YÃ¶nlendirme, genellikle formun bulunduÄŸu sayfaya yapÄ±lmalÄ±dÄ±r.
                // EÄŸer form ana sayfadaysa, ana sayfaya yÃ¶nlendirin.
                return RedirectToAction("Index", "Default"); // DefaultController'Ä±n Index action'Ä±na yÃ¶nlendir

            }
            
            // EÄŸer validasyon hatasÄ± varsa (ModelState.IsValid false ise)
            TempData["MessageResult"] = "Mesaj gÃ¶nderilirken bir hata oluÅŸtu. LÃ¼tfen tÃ¼m alanlarÄ± kontrol edin.";
            return RedirectToAction("Index", "Default"); // Tekrar yÃ¶nlendir (veya formun bulunduÄŸu View'Ä± dÃ¶ndÃ¼r)
        }
    }
}